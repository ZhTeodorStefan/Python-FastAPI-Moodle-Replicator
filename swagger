{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/studenti": {
      "post": {
        "summary": "Create Student",
        "operationId": "create_student_studenti_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Studenti",
        "operationId": "get_studenti_studenti_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Pagina trebuie sa fie cel putin 1",
              "default": 1,
              "title": "Page"
            },
            "description": "Pagina trebuie sa fie cel putin 1"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Limita trebuie sa fie intre 1 si 50",
              "default": 10,
              "title": "Limit"
            },
            "description": "Limita trebuie sa fie intre 1 si 50"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/studenti/{student_id}": {
      "get": {
        "summary": "Get Student",
        "operationId": "get_student_studenti__student_id__get",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Student",
        "operationId": "update_student_studenti__student_id__put",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Student",
        "operationId": "delete_student_studenti__student_id__delete",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/profesori": {
      "post": {
        "summary": "Create Profesor",
        "operationId": "create_profesor_profesori_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfesorCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Profesori",
        "operationId": "get_profesori_profesori_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Pagina trebuie sa fie cel putin 1",
              "default": 1,
              "title": "Page"
            },
            "description": "Pagina trebuie sa fie cel putin 1"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Limita trebuie sa fie intre 1 si 50",
              "default": 10,
              "title": "Limit"
            },
            "description": "Limita trebuie sa fie intre 1 si 50"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/profesori/{profesor_id}": {
      "get": {
        "summary": "Get Profesor",
        "operationId": "get_profesor_profesori__profesor_id__get",
        "parameters": [
          {
            "name": "profesor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Profesor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Profesor",
        "operationId": "update_profesor_profesori__profesor_id__put",
        "parameters": [
          {
            "name": "profesor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Profesor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfesorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Profesor",
        "operationId": "delete_profesor_profesori__profesor_id__delete",
        "parameters": [
          {
            "name": "profesor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Profesor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/discipline": {
      "post": {
        "summary": "Create Disciplina",
        "operationId": "create_disciplina_discipline_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisciplinaCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Discipline",
        "operationId": "get_discipline_discipline_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Pagina trebuie sa fie cel putin 1",
              "default": 1,
              "title": "Page"
            },
            "description": "Pagina trebuie sa fie cel putin 1"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Limita trebuie sa fie intre 1 si 50",
              "default": 10,
              "title": "Limit"
            },
            "description": "Limita trebuie sa fie intre 1 si 50"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/discipline/{disciplina_id}": {
      "get": {
        "summary": "Get Disciplina",
        "operationId": "get_disciplina_discipline__disciplina_id__get",
        "parameters": [
          {
            "name": "disciplina_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Disciplina Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Disciplina",
        "operationId": "update_disciplina_discipline__disciplina_id__put",
        "parameters": [
          {
            "name": "disciplina_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Disciplina Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisciplinaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Disciplina",
        "operationId": "delete_disciplina_discipline__disciplina_id__delete",
        "parameters": [
          {
            "name": "disciplina_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Disciplina Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DisciplinaCreate": {
        "properties": {
          "nume": {
            "type": "string",
            "maxLength": 100,
            "minLength": 2,
            "title": "Nume",
            "description": "Numele disciplinei trebuie sa aiba intre 2 si 100 de caractere"
          },
          "an_studiu": {
            "type": "integer",
            "maximum": 4,
            "minimum": 1,
            "title": "An Studiu",
            "description": "Anul de studiu trebuie sa fie intre 1 si 4"
          },
          "nr_credite": {
            "type": "integer",
            "maximum": 15,
            "minimum": 1,
            "title": "Nr Credite",
            "description": "Numarul de credite trebuie sa fie intre 1 si 15"
          }
        },
        "type": "object",
        "required": [
          "nume",
          "an_studiu",
          "nr_credite"
        ],
        "title": "DisciplinaCreate"
      },
      "DisciplinaUpdate": {
        "properties": {
          "nume": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Nume",
            "description": "Numele disciplinei trebuie sa aiba intre 2 si 100 de caractere"
          },
          "an_studiu": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "An Studiu",
            "description": "Anul de studiu trebuie sa fie intre 1 si 4"
          },
          "nr_credite": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 15,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Nr Credite",
            "description": "Numarul de credite trebuie sa fie intre 1 si 15"
          }
        },
        "type": "object",
        "title": "DisciplinaUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ProfesorCreate": {
        "properties": {
          "nume": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Nume",
            "description": "Numele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "prenume": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Prenume",
            "description": "Prenumele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Email-ul trebuie sa fie valid"
          },
          "grad_didactic": {
            "type": "string",
            "maxLength": 30,
            "minLength": 2,
            "title": "Grad Didactic",
            "description": "Gradul didactic trebuie sa aiba intre 2 si 30 de caractere"
          },
          "tip_asociere": {
            "type": "string",
            "maxLength": 30,
            "minLength": 2,
            "title": "Tip Asociere",
            "description": "Tipul de asociere trebuie sa aiba intre 2 si 30 de caractere"
          },
          "afiliere": {
            "type": "string",
            "maxLength": 100,
            "minLength": 2,
            "title": "Afiliere",
            "description": "Afilierea trebuie sa aiba intre 2 si 100 de caractere"
          }
        },
        "type": "object",
        "required": [
          "nume",
          "prenume",
          "email",
          "grad_didactic",
          "tip_asociere",
          "afiliere"
        ],
        "title": "ProfesorCreate"
      },
      "ProfesorUpdate": {
        "properties": {
          "nume": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Nume",
            "description": "Numele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "prenume": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Prenume",
            "description": "Prenumele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email-ul trebuie sa fie valid"
          },
          "grad_didactic": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 30,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Grad Didactic",
            "description": "Gradul didactic trebuie sa aiba intre 2 si 30 de caractere"
          },
          "tip_asociere": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 30,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Tip Asociere",
            "description": "Tipul de asociere trebuie sa aiba intre 2 si 30 de caractere"
          },
          "afiliere": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Afiliere",
            "description": "Afilierea trebuie sa aiba intre 2 si 100 de caractere"
          }
        },
        "type": "object",
        "title": "ProfesorUpdate"
      },
      "StudentCreate": {
        "properties": {
          "nume": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Nume",
            "description": "Numele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "prenume": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Prenume",
            "description": "Prenumele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "grupa": {
            "type": "string",
            "pattern": "^\\d{4}[A-B]$",
            "title": "Grupa",
            "description": "Grupa trebuie sa fie formata din 4 cifre si o litera, ex: 1409A"
          },
          "an_studiu": {
            "type": "integer",
            "maximum": 4,
            "minimum": 1,
            "title": "An Studiu",
            "description": "Anul de studiu trebuie sa fie intre 1 si 4"
          }
        },
        "type": "object",
        "required": [
          "nume",
          "prenume",
          "grupa",
          "an_studiu"
        ],
        "title": "StudentCreate"
      },
      "StudentUpdate": {
        "properties": {
          "nume": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Nume",
            "description": "Numele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "prenume": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Prenume",
            "description": "Prenumele trebuie sa aiba intre 2 si 50 de caractere"
          },
          "grupa": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}[A-B]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grupa",
            "description": "Grupa trebuie sa fie formata din 4 cifre si o litera (A sau B), ex: 1409A"
          },
          "an_studiu": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "An Studiu",
            "description": "Anul de studiu trebuie sa fie între 1 și 4"
          }
        },
        "type": "object",
        "title": "StudentUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}